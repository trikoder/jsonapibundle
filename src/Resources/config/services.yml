parameters:
    trikoder.jsonapi.request_listener.class: 'Trikoder\JsonApiBundle\Listener\KernelListener'
    trikoder.jsonapi.schema_class_map_provider.class: 'Trikoder\JsonApiBundle\Services\SchemaClassMapService'
    trikoder.jsonapi.factory.class: 'Trikoder\JsonApiBundle\Services\Neomerx\FactoryService'
    trikoder.jsonapi.request_body_decoder.class: 'Trikoder\JsonApiBundle\Services\RequestDecoder\RequestBodyDecoderService'
    trikoder.jsonapi.request_body_validator.class: 'Trikoder\JsonApiBundle\Services\RequestDecoder\RequestBodyValidator'
    trikoder.jsonapi.response_factory.class: 'Trikoder\JsonApiBundle\Services\ResponseFactoryService'
    trikoder.jsonapi.encoder.class: 'Trikoder\JsonApiBundle\Services\Neomerx\EncoderService'
    trikoder.jsonapi.model_tools_factory.class: 'Trikoder\JsonApiBundle\Services\ModelInput\ModelToolsFactory'
    trikoder.jsonapi.model_meta_data_factory.class: 'Trikoder\JsonApiBundle\Services\ModelInput\ModelMetaDataFactory'
    trikoder.jsonapi.error_factory.class: 'Trikoder\JsonApiBundle\Services\Neomerx\ErrorFactory'
    trikoder.jsonapi.config_builder.class: 'Trikoder\JsonApiBundle\Services\ConfigBuilder'
    trikoder.jsonapi.controller_config_listener.class: 'Trikoder\JsonApiBundle\Listener\ControllerConfigListener'
    trikoder.jsonapi.model_factory_resolver.class: 'Trikoder\JsonApiBundle\Model\ModelFactoryResolver'
    trikoder.jsonapi.doctrine_repository_factory.class: 'Trikoder\JsonApiBundle\Bridge\Doctrine\RepositoryFactory'
    trikoder.jsonapi.simple_model_factory.class: 'Trikoder\JsonApiBundle\Model\Factory\SimpleModelFactory'

services:
    trikoder.jsonapi.request_listener:
        class: "%trikoder.jsonapi.request_listener.class%"
        arguments:
            - "@trikoder.jsonapi.factory"
            - "@trikoder.jsonapi.request_body_decoder"
            - "@trikoder.jsonapi.response_factory"
            - "@trikoder.jsonapi.encoder"
            - "@logger"
        tags:
            - { name: kernel.event_listener, event: kernel.controller, priority: 16 }
            - { name: kernel.event_listener, event: kernel.controller_arguments, priority: -10 }
            - { name: kernel.event_listener, event: kernel.view }
            - { name: kernel.event_listener, event: kernel.response }
            - { name: kernel.event_listener, event: kernel.exception }

    trikoder.jsonapi.controller_config_listener:
        class: "%trikoder.jsonapi.controller_config_listener.class%"
        arguments:
            - "@annotation_reader"
            - "@trikoder.jsonapi.config_builder"
        tags:
            - { name: kernel.event_listener, event: kernel.controller, priority: 8 }

    Trikoder\JsonApiBundle\Contracts\SchemaClassMapProviderInterface:
        class: "%trikoder.jsonapi.schema_class_map_provider.class%"

    trikoder.jsonapi.schema_class_map_provider: '@Trikoder\JsonApiBundle\Contracts\SchemaClassMapProviderInterface'

    Trikoder\JsonApiBundle\Services\Neomerx\ServiceContainer:
        arguments: ["@service_container"]

    trikoder.jsonapi.factory:
        class: "%trikoder.jsonapi.factory.class%"
        arguments: ['@Trikoder\JsonApiBundle\Services\Neomerx\ServiceContainer', "@logger"]

    trikoder.jsonapi.request_body_decoder:
        class: "%trikoder.jsonapi.request_body_decoder.class%"
        arguments: ['@Trikoder\JsonApiBundle\Contracts\RequestBodyValidatorInterface']
        public: true

    Trikoder\JsonApiBundle\Contracts\RequestBodyValidatorInterface:
        class: '%trikoder.jsonapi.request_body_validator.class%'

    Trikoder\JsonApiBundle\Contracts\ResponseFactoryInterface:
        class: "%trikoder.jsonapi.response_factory.class%"
        arguments:
            - "@trikoder.jsonapi.encoder"
            - "@trikoder.jsonapi.error_factory"
        public: true

    trikoder.jsonapi.response_factory: '@Trikoder\JsonApiBundle\Contracts\ResponseFactoryInterface'

    Trikoder\JsonApiBundle\Services\Neomerx\EncoderService:
        class: "%trikoder.jsonapi.encoder.class%"
        arguments: ["@trikoder.jsonapi.factory"]
        public: true

    trikoder.jsonapi.encoder: '@Trikoder\JsonApiBundle\Services\Neomerx\EncoderService'

    Trikoder\JsonApiBundle\Services\ModelInput\ModelToolsFactory:
        class: "%trikoder.jsonapi.model_tools_factory.class%"
        arguments:
            - "@form.factory"
            - "@validator"
            - "@trikoder.jsonapi.model_meta_data_factory"
            - "%form.type_extension.csrf.enabled%"
        public: true

    trikoder.jsonapi.model_tools_factory: '@Trikoder\JsonApiBundle\Services\ModelInput\ModelToolsFactory'

    Trikoder\JsonApiBundle\Services\ModelInput\ModelMetaDataFactory:
        class: "%trikoder.jsonapi.model_meta_data_factory.class%"
        arguments: ["@doctrine.orm.entity_manager"]

    trikoder.jsonapi.model_meta_data_factory: '@Trikoder\JsonApiBundle\Services\ModelInput\ModelMetaDataFactory'

    trikoder.jsonapi.error_factory:
        class: "%trikoder.jsonapi.error_factory.class%"

    trikoder.jsonapi.config_builder:
        class: "%trikoder.jsonapi.config_builder.class%"
        arguments: [[], "@service_container"]

    trikoder.jsonapi.doctrine_repository_factory:
        class: "%trikoder.jsonapi.doctrine_repository_factory.class%"
        arguments: ["@doctrine.orm.entity_manager"]
        public: true

    trikoder.jsonapi.simple_model_factory:
        class: "%trikoder.jsonapi.simple_model_factory.class%"
        public: true

    trikoder.jsonapi.model_factory_resolver:
        class: "%trikoder.jsonapi.model_factory_resolver.class%"
        calls:
          - [registerFactory, ['@trikoder.jsonapi.simple_model_factory']]
